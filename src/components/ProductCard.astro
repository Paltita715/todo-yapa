---
interface Props {
  image: string
  alt: string
  title: string
  info: string
  horizontal?: boolean
  cuadrado?: boolean
  fondoBlur?: boolean
}
const { image, alt, title, info, horizontal, cuadrado, fondoBlur } = Astro.props

const sizeClass = horizontal
  ? 'h-96 w-[30rem]'
  : cuadrado
    ? 'h-96 w-96'
    : 'h-[30rem] w-96'
---

<a
  class=`card block relative mx-auto ${sizeClass} group transform duration-300 hover:-translate-y-2`
  href='/waza'
>
  <div class='relative w-full h-full overflow-hidden rounded-lg'>
    <img
      class='image w-full h-full object-cover absolute inset-0'
      src={image}
      alt={alt}
    />
    <div
      class='absolute bottom-0 left-0 w-full h-1/2 bg-gradient-to-t from-[#121212] to-transparent rounded-b-xl'
    >
    </div>
    <div class='absolute bottom-0 left-0 w-full p-4 text-white z-10'>
      <h2 class='text-xl font-bold'>{title}</h2>
    </div>
    <div
      class='absolute bottom-[100%] right-[100%] w-[150%] h-full bg-[#121212] bg-opacity-70 transform group-hover:translate-x-full group-hover:translate-y-full transition-transform duration-300 ease-in-out flex z-20'
      style='clip-path: polygon(0 0, 0 65%, 100% 0);'
    >
      <div class='text-white w-96 p-4'>
        <p class='text-lg'>{info}</p>
      </div>
    </div>
  </div>
</a>

<script>
  function initializeCardImages() {
    const cards = document.querySelectorAll('.card')

    cards.forEach((card) => {
      const image = card.querySelector('img')
      if (image) {
        const imageBlur = document.createElement('img')
        imageBlur.className = image.className
        imageBlur.classList.add('-z-10', 'filter', 'blur-md', 'saturate-200')
        imageBlur.src = image.src
        card.prepend(imageBlur)
      }
    })
  }

  initializeCardImages()

  document.addEventListener('astro:after-swap', () => {
    initializeCardImages()
  })
</script>
